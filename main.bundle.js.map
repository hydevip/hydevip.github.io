{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/cockpit/cockpit.component.css","./src/app/cockpit/cockpit.component.html","./src/app/cockpit/cockpit.component.ts","./src/app/server-element/server-element.component.css","./src/app/server-element/server-element.component.html","./src/app/server-element/server-element.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".container {\\n  margin-top: 30px;\\n}\\n\\np {\\n  color: blue;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n<app-cockpit\\n(serverCreated)=\\\"onServerAdded($event)\\\"\\n(blueprintCreated)=\\\"onBlueprintAdded($event)\\\"\\n></app-cockpit>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n<app-server-element *ngFor=\\\"let serverElement of serverElements\\\"\\n[srvElement]=\\\"serverElement\\\"></app-server-element>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  serverElements = [{type: 'server', name: 'Testserver',  content: 'just a test server' }];\n\n\n  onServerAdded(serverData: {serverName: string, serverContent: string}) {\n    this.serverElements.push({\n      type: 'server',\n      name: serverData.serverName,\n      content: serverData.serverContent,\n    });\n  }\n\n  onBlueprintAdded(blueprintData: {serverName: string, serverContent: string}) {\n    this.serverElements.push({\n      type: 'blueprint',\n      name: blueprintData.serverName,\n      content: blueprintData.serverContent\n    });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { CockpitComponent } from './cockpit/cockpit.component';\nimport { ServerElementComponent } from './server-element/server-element.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CockpitComponent,\n    ServerElementComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cockpit/cockpit.component.css\n// module id = ./src/app/cockpit/cockpit.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <p>Add new Servers or blueprints!</p>\\n    <label>Server Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newServerName\\\">\\n    <label>Server Content</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newServerContent\\\">\\n    <br>\\n    <button\\n      class=\\\"btn btn-primary\\\"\\n      (click)=\\\"onAddServer()\\\">Add Server</button>\\n    <button\\n      class=\\\"btn btn-primary\\\"\\n      (click)=\\\"onAddblueprint()\\\">Add Server Blueprint</button>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cockpit/cockpit.component.html\n// module id = ./src/app/cockpit/cockpit.component.html\n// module chunks = main","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'app-cockpit',\n  templateUrl: './cockpit.component.html',\n  styleUrls: ['./cockpit.component.css']\n})\nexport class CockpitComponent implements OnInit {\n @Output() serverCreated= new EventEmitter<{serverName: string, serverContent: string}>();\n @Output() blueprintCreated= new EventEmitter<{serverName: string, serverContent: string}>();\n  newServerName = '';\n  newServerContent = '';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onAddServer() {\n    this.serverCreated.emit({\n      serverName: this.newServerName,\n      serverContent: this.newServerContent\n    });\n  }\n\n  onAddblueprint() {\n    this.blueprintCreated.emit({\n      serverName: this.newServerName,\n      serverContent: this.newServerContent\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cockpit/cockpit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/server-element/server-element.component.css\n// module id = ./src/app/server-element/server-element.component.css\n// module chunks = main","module.exports = \"<div\\n        class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">{{ element.name }}</div>\\n        <div class=\\\"panel-body\\\">\\n          <p>\\n            <strong *ngIf=\\\"element.type === 'server'\\\" style=\\\"color: red\\\">{{ element.content }}</strong>\\n            <em *ngIf=\\\"element.type === 'blueprint'\\\">{{ element.content }}</em>\\n          </p>\\n        </div>\\n      </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/server-element/server-element.component.html\n// module id = ./src/app/server-element/server-element.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-server-element',\n  templateUrl: './server-element.component.html',\n  styleUrls: ['./server-element.component.css']\n})\nexport class ServerElementComponent implements OnInit {\n\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('srvElement') element: { type: string, name: string, content: string };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/server-element/server-element.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}